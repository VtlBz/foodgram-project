# Generated by Django 4.1.7 on 2023-05-25 16:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название ингридиента', max_length=200, verbose_name='Название ингридиента')),
                ('measurement_unit', models.CharField(help_text='Введите единицу измерения ингридиента', max_length=20, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Дата публикации рецепта', verbose_name='Дата публикации')),
                ('name', models.CharField(help_text='Введите название рецепта', max_length=200, verbose_name='Название рецепта')),
                ('image', models.ImageField(blank=True, help_text='Загрузите изображение', null=True, upload_to='recipes/images/', verbose_name='Изображение')),
                ('text', models.TextField(blank=True, help_text='Введите описание рецепта', null=True, verbose_name='Описание рецепта')),
                ('cooking_time', models.PositiveSmallIntegerField(default=1, help_text='Укажите время, требуемое для приготовления этого рецепта', validators=[django.core.validators.MinValueValidator(1, 'Время приготовления не может быть меньше 1 минуты!'), django.core.validators.MaxValueValidator(60000, 'Время приготовления не может быть более 1000 часов!')], verbose_name='Время приготовления')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'db_table': 'recipes',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=1, help_text='Количество продукта', validators=[django.core.validators.MinValueValidator(1, 'Количество ингредиентов не может быть меньше 1!')], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Количество',
                'verbose_name_plural': 'Количество',
                'db_table': 'recipes_ingredients',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название тэга', max_length=200, unique=True, verbose_name='Название тэга')),
                ('color', models.CharField(help_text='Введите цветовой HEX-код тэга', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')], verbose_name='Цвет тэга')),
                ('slug', models.SlugField(help_text='Укажите слаг для тэга. Используйте только латиницу, цифры, дефисы и знаки подчёркивания', max_length=100, unique=True, verbose_name='Slug тэга')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('name',),
            },
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('name', 'color'), name='unique_tag'),
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='ingredient',
            field=models.ForeignKey(help_text='Рецепты', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='recipes.ingredient', verbose_name='Рецепты'),
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='recipe',
            field=models.ForeignKey(help_text='Ингридиенты', on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.recipe', verbose_name='Ингридиенты'),
        ),
    ]
